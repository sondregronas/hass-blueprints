# https://github.com/zigpy/zha-device-handlers/issues/940#issuecomment-1001107154

# TODO: Default behavior for turning on/off lights should remember the previous state of the light.

blueprint:
  name: Aqara H1 Switch (ZHA)
  description: |
      Blueprint to integrate the Aqara H1 Switch (ZHA) with Home Assistant.
      Run actions on button presses.

  domain: automation
  source_url: https://github.com/SondreGronas/hass-blueprints/blob/main/devices/Aqara%20H1%20Switch%20ZHA.yaml
  input:
    switch:
      name: Aqara H1 Switch
      description: The Aqara H1 Switch device.
      selector:
        device:
          model: lumi.remote.b28ac1
    area:
      name: Area
      description: The area to control.
      selector:
        area: {}

    left_1x:
      name: Left Button Single Press
      description: Action to run on left button press. By default "light.<area_name>" will be turned on.
      default:
      selector:
        action: {}
    left_2x:
      name: Left Button Double Press
      description: Action to run on left button double press. By default "scene.<area_name>_bright" will be activated.
      default:
      selector:
        action: {}
    left_3x:
      name: Left Button Triple Press
      description: Action to run on left button triple press.
      default:
      selector:
          action: {}
    left_hold:
      name: Left Button Hold
      description: Action to run on left button hold.
      default:
      selector:
          action: {}
    right_1x:
      name: Right Button Single Press
      description: Action to run on right button press. By default "light.<area_name>" will be turned off.
      default:
      selector:
          action: {}
    right_2x:
      name: Right Button Double Press
      description: Action to run on right button double press. By default "scene.<area_name>_dim" will be activated.
      default:
      selector:
          action: {}
    right_3x:
      name: Right Button Triple Press
      description: Action to run on right button triple press.
      default:
      selector:
          action: {}
    right_hold:
      name: Right Button Hold
      description: Action to run on right button hold.
      default:
      selector:
          action: {}
    both_1x:
      name: Both Buttons Single Press
      description: Action to run on both buttons press.
      default:
      selector:
          action: {}
    both_2x:
      name: Both Buttons Double Press
      description: Action to run on both buttons double press.
      default:
      selector:
          action: {}
    both_3x:
      name: Both Buttons Triple Press
      description: Action to run on both buttons triple press.
      default:
      selector:
          action: {}
    both_hold:
      name: Both Buttons Hold
      description: Action to run on both buttons hold.
      default:
      selector:
          action: {}


mode: restart
max_exceeded: silent

trigger:
  platform: event
  event_type: zha_event
  event_data:
    device_id: !input switch

variables:
  command: "{{ trigger.event.data.command }}"

  area: !input area
  light_group_name: "{{ area | lower | replace(' ', '_') }}"
  left_1x: !input left_1x
  left_2x: !input left_2x
  left_3x: !input left_3x
  left_hold: !input left_hold
  right_1x: !input right_1x
  right_2x: !input right_2x
  right_3x: !input right_3x
  right_hold: !input right_hold
  both_1x: !input both_1x
  both_2x: !input both_2x
  both_3x: !input both_3x
  both_hold: !input both_hold

action:
# Left button
- choose:
  - conditions: "{{ command == '1_single' }}"
    sequence:
    - choose:
        - conditions: "{{ left_1x and left_1x != [] }}"
          sequence: !input left_1x
      default:
        - service: light.turn_on
          target:
            entity_id: light.{{ light_group_name }}
  - conditions: "{{ command == '1_double' }}"
    sequence:
    - choose:
        - conditions: "{{ left_2x and left_2x != [] }}"
          sequence: !input left_2x
      default:
        - service: scene.turn_on
          target:
            entity_id: scene.{{ light_group_name }}_bright
  - conditions: "{{ command == '1_triple' }}"
    sequence: !input left_3x
  - conditions: "{{ command == '1_hold' }}"
    sequence: !input left_hold

# Right button
- choose:
  - conditions: "{{ command == '2_single' }}"
    sequence:
    - choose:
        - conditions: "{{ right_1x and right_1x != [] }}"
          sequence: !input right_1x
      default:
        - service: light.turn_off
          target:
            entity_id: light.{{ light_group_name }}
  - conditions: "{{ command == '2_double' }}"
    sequence:
    - choose:
        - conditions: "{{ right_2x and right_2x != [] }}"
          sequence: !input right_2x
      default:
        - service: scene.turn_on
          target:
            entity_id: scene.{{ light_group_name }}_dim
  - conditions: "{{ command == '2_triple' }}"
    sequence: !input right_3x
  - conditions: "{{ command == '2_hold' }}"
    sequence: !input right_hold

# Both buttons
- choose:
  - conditions: "{{ command == '3_single' }}"
    sequence: !input both_1x
  - conditions: "{{ command == '3_double' }}"
    sequence: !input both_2x
  - conditions: "{{ command == '3_triple' }}"
    sequence: !input both_3x
  - conditions: "{{ command == '3_hold' }}"
    sequence: !input both_hold