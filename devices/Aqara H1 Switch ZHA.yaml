# https://github.com/zigpy/zha-device-handlers/issues/940#issuecomment-1001107154
blueprint:
  name: Aqara H1 Switch (ZHA)
  description: |
      Blueprint to integrate the Aqara H1 Switch (Zigbee) with Home Assistant.
      Activate a scene or toggle a light when a button is pressed.

  domain: automation
  source_urL: https://github.com/SondreGronas/hass-blueprints/blob/main/devices/Aqara%20H1%20Switch%20ZHA.yaml
  input:
    switch:
      name: Aqara H1 Switch
      description: The Aqara H1 Switch device.
      selector:
        device:
          model: lumi.remote.b28ac1
    area:
      name: Area
      description: The area to control.
      selector:
        area: {}

    left_1x:
      name: Left Button 1x
      description: Action to run on left button press. If not set, the light with the same area name will be toggled.
      selector:
        action: {}
    left_2x:
      name: Left Button 2x
      description: Action to run on left button double press. If not set, the scene "<area name> Bright" will be activated.
      selector:
        action: {}
    left_3x:
        name: Left Button 3x
        description: Action to run on left button triple press.
        selector:
            action: {}
    left_hold:
        name: Left Button Hold
        description: Action to run on left button hold.
        selector:
            action: {}
    right_1x:
        name: Right Button 1x
        description: Action to run on right button press. If not set, the light with the same area name will be turned off.
        selector:
            action: {}
    right_2x:
        name: Right Button 2x
        description: Action to run on right button double press. If not set, the scene "<area name> Dim" will be activated.
        selector:
            action: {}
    right_3x:
        name: Right Button 3x
        description: Action to run on right button triple press.
        selector:
            action: {}
    right_hold:
        name: Right Button Hold
        description: Action to run on right button hold.
        selector:
            action: {}

  mode: restart
  max_exceeded: silent

  trigger:
    platform: event
    event_type: zha_event
    event_data:
      device_id: !input switch

  variables:
    command: "{{ trigger.event.data.command }}"
    args: "{{ trigger.event.data.args }}"

    switch: !input switch
    area: !input area
    left_1x: > 
      {% if !input left_1x %}
      !input left_1x
      {% else %}
        service: light.toggle
        target:
          entity_id: light.{{ area }}
      {% endif %}
    left_2x: > 
      {% if !input left_2x %}
        !input left_2x
      {% else %}
        service: scene.turn_on
        target:
        entity_id: scene.{{ area }}_bright
      {% endif %}
    left_3x: !input left_3x
    left_hold: !input left_hold
    right_1x: > 
      {% if !input right_1x %}
        !input right_1x
      {% else %}
        service: light.turn_off
        target:
          entity_id: light.{{ area }}
      {% endif %}
    right_2x: > 
      {% if !input right_2x %}
        !input right_2x
      {% else %}
        service: scene.turn_on
        target:
          entity_id: scene.{{ area }}_dim
      {% endif %}
    right_3x: !input right_3x
    right_hold: !input right_hold

  action:
    - choose:
        - conditions: "{{ command == '1_single' }}"
          sequence: !input left_1x
        - conditions: "{{ command == '1_double' }}"
          sequence: !input left_2x
        - conditions: "{{ command == '1_triple' }}"
          sequence: !input left_3x
        - conditions: "{{ command == '1_hold' }}"
          sequence: !input left_hold
        - conditions: "{{ command == '2_single' }}"
          sequence: !input right_1x
        - conditions: "{{ command == '2_double' }}"
          sequence: !input right_2x
        - conditions: "{{ command == '2_triple' }}"
          sequence: !input right_3x
        - conditions: "{{ command == '2_hold' }}"
          sequence: !input right_hold
